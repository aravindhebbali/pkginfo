% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/info-github.R
\docType{class}
\name{GitHubRepo}
\alias{GitHubRepo}
\title{Retrieve GitHub information}
\format{An R6 class.}
\description{
Retrieve GitHub information
}
\section{Usage}{

\preformatted{
myRepo <- GitHubRepo$new("repo_name", "user_name")
myRepo$get_stats()
myRepo$get_branches()
myRepo$get_issues()
myRepo$get_labels()
myRepo$get_milestones()
myRepo$get_coc()
myRepo$get_license()
myRepo$get_pull_requests()
myRepo$get_releases()
myRepo$get_travis_status()
myRepo$get_appveyor_status()
myRepo$get_coverage()
}
}

\section{Arguments}{

\describe{
  \item{user_name}{GitHub user or organization name.}
  \item{repo_name}{Name of the GitHub repository.}
}
}

\section{Details}{


To create \code{GitHubRepo} objects, you need to use \code{GitHubRepo$new("repo_name", "user_name")}.

\code{myRepo$get_stats()} will return the number of stars, forks and issues of the package.

\code{myRepo$get_branches()} will return the name of the branches of the package.

\code{myRepo$get_issues()} will return the list of open issues.

\code{myRepo$get_labels()} will return the name and color labels used in issues filed in the package.

\code{myRepo$get_milestones()} will return the details of milestones associated with the package.

\code{myRepo$get_coc()} will return the code of conduct of the package.

\code{myRepo$get_license()} will return license of the package.

\code{myRepo$get_pull_requests()} will return all the open pull requests.

\code{myRepo$get_releases()} will return all the releases of the package on GitHub.

\code{myRepo$get_travis_status()} will return the build status of the package from Travis CI.

\code{myRepo$get_appveyor_status()} will return the build status of the package from Appveyor.

\code{myRepo$get_coverage()} will return code coverage of the package from Codecov.
}

\examples{
\dontrun{
# initialize object
myRepo <- GitHubRepo$new("dplyr", "tidyverse")

# get stats
myRepo$get_stats()

# get branches
myRepo$get_branches()

# get travis ci build status
myRepo$get_travis_status()

# get codecov code coverage
myRepo$get_coverage()
}

}
